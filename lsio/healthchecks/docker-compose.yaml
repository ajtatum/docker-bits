# Healthchecks is a watchdog for your cron jobs. It's a web server that listens
# for pings from your cron jobs, plus a web interface.

---
version: "2.1"
services:
  healthchecks:
    image: ghcr.io/linuxserver/healthchecks
    container_name: healthchecks
    environment:
      # for GroupID
      - PUID=${PUID:-1024}
      # for UserID
      - PGID=${PGID:-100}
      # The site's top-level URL and the port it listens to if differrent than 80 or 443 (e.g., https://healthchecks.example.com:8000)
      - SITE_ROOT=<SITE_ROOT>
      # The site's name (e.g., "Example Corp HealthChecks")
      - SITE_NAME=<SITE_NAME>
      # From email for alerts
      - DEFAULT_FROM_EMAIL=<DEFAULT_FROM_EMAIL>
      # SMTP host
      - EMAIL_HOST=<EMAIL_HOST>
      # SMTP port
      - EMAIL_PORT=<EMAIL_PORT>
      # SMTP user
      - EMAIL_HOST_USER=<EMAIL_HOST_USER>
      # SMTP password
      - EMAIL_HOST_PASSWORD=<EMAIL_HOST_PASSWORD>
      # Use TLS for SMTP (`True` or `False`)
      - EMAIL_USE_TLS=<True or False>
      # array of valid hostnames for the server `["test.com","test2.com"]` or `"*"`
      - ALLOWED_HOSTS=<ALLOWED_HOSTS>
      # Superuser email
      - SUPERUSER_EMAIL=<SUPERUSER_EMAIL>
      # Superuser password
      - SUPERUSER_PASSWORD=<SUPERUSER_PASSWORD>
      # Defaults to False. Set to true to always override the `local_settings.py` file with values from environment variables. Do not set to True if you have made manual modifications to this file.
      - REGENERATE_SETTINGS=True/False
    volumes:
      # database and healthchecks config directory volume mapping
      - ${BASEDIR:-/volume1/docker}/healthchecks/config:/config
    ports:
      # will map the container's port 8000 to port 8000 on the host
      - 8000:8000
    restart: unless-stopped
