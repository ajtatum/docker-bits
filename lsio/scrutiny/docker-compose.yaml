# [Scrutiny](https://github.com/AnalogJ/scrutiny) WebUI for smartd S.M.A.R.T
# monitoring. Scrutiny is a Hard Drive Health Dashboard & Monitoring solution,
# merging manufacturer provided S.M.A.R.T metrics with real-world failure rates
# from Backblaze.

---
version: "2.1"
services:
  scrutiny:
    image: ghcr.io/linuxserver/scrutiny
    container_name: scrutiny
    cap_add:
      - SYS_RAWIO
      - SYS_ADMIN # optional
    environment:
      # for GroupID
      - PUID=${PUID:-1024}
      # for UserID
      - PGID=${PGID:-100}
      # Specify a timezone to use for example Europe/Amsterdam
      - TZ=${TZ:-Europe/Amsterdam}
      # # optional - API endpoint of the scrutiny UI. Do not change unless using as a remote collector
      - SCRUTINY_API_ENDPOINT=http://localhost:8080
      # # optional - Run the web service.
      - SCRUTINY_WEB=true
      # # optional - Run the metrics collector.
      - SCRUTINY_COLLECTOR=true
    volumes:
      # Where config is stored.
      - ${BASEDIR:-/volume1/docker}/scrutiny/config:/config
      # Provides necessary metadata to Scrutiny.
      - ${BASEDIR:-/volume1/docker}/scrutiny/run/udev:ro:/run/udev:ro
    ports:
      # Port for scrutiny's web interface and API.
      - 8080:8080
    devices:
      # This is how Scrutiny accesses drives. Optionally supply `/dev:/dev` instead for all devices.
      - /dev/sda:/dev/sda
      # A second drive.
      - /dev/sdb:/dev/sdb
      # An NVMe drive. NVMe requires `--cap-add=SYS_ADMIN`.
      - /dev/nvme1n1:/dev/nvme1n1
    restart: unless-stopped
